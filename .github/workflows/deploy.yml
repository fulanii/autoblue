name: Deploy Django Docker App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |

          docker build \
            --build-arg DJANGO_SETTINGS_MODULE="${{ secrets.DJANGO_SETTINGS_MODULE }}"\
            --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}"\
            --build-arg DB_NAME="${{ secrets.DB_NAME }}"\
            --build-arg DB_USER="${{ secrets.DB_USER }}" \
            --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --build-arg DB_HOST="${{ secrets.DB_HOST }}" \
            --build-arg DB_PORT="${{ secrets.DB_PORT }}" \
            --build-arg ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}" \
            --build-arg REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            -t yassinecodes/autoblue:latest .

      - name: Push Docker image to Docker Hub
        run: docker push yassinecodes/autoblue:latest

      # - name: Deploy to production
      #   run: |
      #     sshpass -p "${{ secrets.PRODUCTION_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }} << EOF
      #     docker pull your-dockerhub-user/your-image-name:latest
      #     docker stop your-container-name || true
      #     docker rm your-container-name || true
      #     docker run -d \
      #       --name your-container-name \
      #       -p 8000:8000 \
      #       --env DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} \
      #       --env SECRET_KEY=${{ secrets.SECRET_KEY }} \
      #       --env DB_NAME=${{ secrets.DB_NAME }} \
      #       --env DB_USER=${{ secrets.DB_USER }} \
      #       --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
      #       --env DB_HOST=${{ secrets.DB_HOST }} \
      #       --env DB_PORT=${{ secrets.DB_PORT }} \
      #       --env ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }} \
      #       --env REDIS_HOST=${{ secrets.REDIS_HOST }} \
      #       your-dockerhub-user/your-image-name:latest
      #     EOF
